@use 'uswds-core' as *;

// Hold variables not compatible with uswds-core but used by our site.
$theme-link-dark-hover-color: 'blue-warm-30v';

// Custom type variables -- note that these are not USWDS-native variables
$theme-heading-font-size-xl: 2.8125rem; // 45px - h1 display
$theme-heading-font-size-lg: 2rem; // 32px - h2 display
$theme-heading-font-size-md: 1.375rem; // 22px - h3 display
$theme-heading-font-size-sm: 1rem; // 16px - h4 display
$theme-heading-font-size-lg-mobile: 1.5rem; // 24px - mobile headers
$theme-heading-font-size-md-mobile: 1.25rem; // 20px - mobile headers
$theme-text-font-size-lg: 1.125rem; // 18px - lead body copy
$theme-text-font-size-md: 1rem; //16px - regular body copy
$theme-text-font-size-sm: 0.875rem; // 14px - small body copy
$theme-text-font-size-xs: 0.75rem; // 12px - accent text

$theme-body-copy-line-height: 1.625;

@mixin flex-container {
  align-items: center;
  display: flex;
}

// Custom type mixins
@mixin text--body-copy__xsmall {
  font-size: $theme-text-font-size-xs;
  line-height: 1.3;
}

@mixin text--body-copy__small {
  font-size: $theme-text-font-size-sm;
  line-height: 1.5;
}

@mixin text--body-copy__medium {
  font-size: $theme-text-font-size-md;
  line-height: 1.625;
}

@mixin text--body-copy__large {
  font-size: $theme-text-font-size-lg;
  line-height: 1.5;
}

@mixin text--heading__small {
  font-size: $theme-heading-font-size-sm;
  line-height: 1.5;
}

@mixin text--heading__medium {
  font-size: $theme-heading-font-size-md;
  line-height: 1.5;
  @include at-media-max(mobile-lg) {
    font-size: $theme-heading-font-size-md-mobile;
    line-height: 1.3;
  }
}

@mixin text--heading__large {
  font-size: $theme-heading-font-size-lg;
  line-height: 1.3;
  @include at-media-max(mobile-lg) {
    font-size: $theme-heading-font-size-lg-mobile;
  }
}

@mixin text--heading__xlarge {
  font-size: $theme-heading-font-size-xl;
  line-height: 1.3;
  @include at-media-max(mobile-lg) {
    font-size: $theme-heading-font-size-lg;
  }
}

@mixin heading--three {
  font-size: $theme-heading-font-size-md;
  line-height: 1.5;
  font-family: family('heading');
  font-weight: $theme-font-weight-bold;
  color: color($theme-color-primary-darker);
}

@mixin add-background-svg($image-name, $image-path: $theme-image-path) {
  $image-name: unquote($image-name);
  background-image: url("#{$image-path}/#{$image-name}.svg"),
    linear-gradient(transparent, transparent);
  background-repeat: no-repeat;
}

@mixin format-input {
  & + [class$="__label"]::before {
    @content;
  }
}

.usa-checkbox__input {
  &:checked,
  &:checked:disabled {
    @include format-input {
      background-position: center center;
      background-size: units(1.5) auto;
      @media print {
        background-image: none;
        background-color: color("white");
        content: url("#{$theme-image-path}/checkbox-check-print.svg");
        text-indent: 0;
      }
    }
  }
}

.usa-checkbox__input[data-checked=true]+[class$=__label]::before {
  background-color: #162e51;
  background-image: url("../images/uswds/correct8.svg"),linear-gradient(transparent, transparent);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: .75rem auto;
}

@mixin external-link(
  $external-link: 'usa-icons/launch',
  $external-link-hover: 'usa-icons/launch',
  $image-path: $theme-image-path,
  $contrast-bg: "base-darker"
) {
  &::after {
    $external-link-size: 1.75ex;
    background-image: url("#{$image-path}/#{$external-link}.svg");
    background-repeat: no-repeat;
    background-size: 100%;
    content: "";
    display: inline;
    height: $external-link-size;
    width: $external-link-size;
    margin-left: units(2px);
    vertical-align: middle;
  }

  &:hover::after {
    @include add-background-svg("#{$external-link-hover}", $image-path);
  }
}

.usa-hero {
  background-image: $theme-hero-image;
}

@mixin add-color-icon($icon-object, $contrast-bg) {
  $filename-base: map-get($icon-object, "name");
  $svg-height: map-get($icon-object, "svg-height");
  $svg-width: map-get($icon-object, "svg-width");
  $aspect: $svg-width / $svg-height;
  $height: if(
    unitless(map-get($icon-object, "height")),
    units(map-get($icon-object, "height")),
    map-get($icon-object, "height")
  );
  $width: $height * $aspect;
  $container-height: if(
    map-has-key($icon-object, "container-height"),
    units(map-get($icon-object, "container-height")),
    null
  );
  $container-width: if(
    map-has-key($icon-object, "container-width"),
    units(map-get($icon-object, "container-width")),
    null
  );
  $color: if(
    map-has-key($icon-object, "color"),
    map-get($icon-object, "color"),
    "ink"
  );
  $color-variant: if(
    map-has-key($icon-object, "color-variant"),
    map-get($icon-object, "color-variant"),
    "white"
  );
  $color-hover: if(
    map-has-key($icon-object, "color-hover"),
    map-get($icon-object, "color-hover"),
    null
  );
  $rotate: if(
    map-has-key($icon-object, "rotate"),
    map-get($icon-object, "rotate"),
    null
  );
  $path: if(
    map-has-key($icon-object, "path"),
    map-get($icon-object, "path"),
    $theme-image-path
  );
  $ie11-variant: get-color-token-from-bg($contrast-bg, "white", "black");
  $filename-ie11: if(
    $ie11-variant == "white",
    "usa-icons-bg/#{$filename-base}--white.svg",
    "usa-icons/#{$filename-base}.svg"
  );

  $mask-props: url("#{$path}/usa-icons/#{$filename-base}.svg") no-repeat center /
    #{$width} #{$height};
  $image-props: url("#{$path}/#{$filename-ie11}") no-repeat center / #{$width} #{$height};

  // Default background shorthand for browsers that don't support mask or supports.
  background: $image-props;
  display: inline-block;
  height: if($container-height, $container-height, $height);
  width: if($container-width, $container-width, $width);
  @if $rotate {
    transform: rotate($rotate);
  }

  // Mask supported styles
  @supports (mask: url("")) {
    background: none;
    background-color: color($color);
    mask: $mask-props;
    @if $color-hover {
      &:hover {
        background-color: color($color-hover);
      }
    }
  }
}

/******************************************
Heading and body type styles
******************************************/
h1,
h2,
h3,
h4,
h5,
h6 {
  @include add-knockout-font-smoothing;
}

// NOTE: We're overriding the USWDS declarations for heading tags here because
// we want to avoid the normalization that happens with the font tokens:
// https://designsystem.digital.gov/design-tokens/typesetting/overview/
h1,
.h1 {
  @include text--heading__xlarge();
  font-family: family("heading");
  font-weight: $theme-font-weight-bold;
  color: color($theme-color-primary-darker);
}

h2,
.h2 {
  @include text--heading__large();
  font-family: family("heading");
  font-weight: $theme-font-weight-bold;
  color: color($theme-color-primary-darker);
}

h3,
.h3 {
  @include heading--three();
}

h4,
.h4 {
  @include text--heading__small();
  font-family: family("heading");
  font-weight: $theme-font-weight-bold;
  color: color($theme-color-primary-darker);
}

p,
li {
  @include text--body-copy__medium();
}

a,
a:visited {
  color: color($theme-link-color);
  &:hover {
    color: color($theme-link-hover-color);
  }
}

.text__reverse {
  color: color("white");
}

.total-results {
  font-size: 1.375rem;
}

blockquote a {
  overflow-wrap: break-word;
}

.flex-align-center {
  align-items: center;
}

.flex-align-end {
  align-items: flex-end;
}

.flex-align-start {
  align-items: flex-start;
}
